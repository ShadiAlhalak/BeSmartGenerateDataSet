﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace RatingMobs
{
    public partial class MLModel1
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"userid", @"userid"),new InputOutputColumnPair(@"Performance", @"Performance"),new InputOutputColumnPair(@"Display", @"Display"),new InputOutputColumnPair(@"Camera", @"Camera"),new InputOutputColumnPair(@"Battary", @"Battary"),new InputOutputColumnPair(@"BuildQuality", @"BuildQuality"),new InputOutputColumnPair(@"price", @"price")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"userid",@"Performance",@"Display",@"Camera",@"Battary",@"BuildQuality",@"price"}))      
                                    .Append(mlContext.Regression.Trainers.FastTree(new FastTreeRegressionTrainer.Options(){NumberOfLeaves=10,MinimumExampleCountPerLeaf=9,NumberOfTrees=50,MaximumBinCountPerFeature=208,FeatureFraction=0.998359431260397,LearningRate=0.76933475282757,LabelColumnName=@"rating",FeatureColumnName=@"Features"}));

            return pipeline;
        }
    }
}
